{
  "GET /authorizations/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /authorizations": {
    "scopes": {
      "type": "string[]",
      "required": false,
      "description": "A list of scopes that this authorization is in.",
      "location": "bodykey"
    },
    "note": {
      "type": "string",
      "required": false,
      "description": "A note to remind you what the OAuth token is for.",
      "location": "bodykey"
    },
    "note_url": {
      "type": "string",
      "required": false,
      "description": "A URL to remind you what app the OAuth token is for.",
      "location": "bodykey"
    },
    "client_id": {
      "type": "string",
      "required": false,
      "description": "The 20 character OAuth app client key for which to create the token.",
      "location": "bodykey"
    },
    "client_secret": {
      "type": "string",
      "required": false,
      "description": "The 40 character OAuth app client secret for which to create the token.",
      "location": "bodykey"
    },
    "fingerprint": {
      "type": "string",
      "required": false,
      "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
      "location": "bodykey"
    }
  },
  "PATCH /authorizations/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "scopes": {
      "type": "string[]",
      "required": false,
      "description": "A list of scopes that this authorization is in.",
      "location": "bodykey"
    },
    "add_scopes": {
      "type": "string[]",
      "required": false,
      "description": "A list of scopes to add to this authorization.",
      "location": "bodykey"
    },
    "remove_scopes": {
      "type": "string[]",
      "required": false,
      "description": "A list of scopes to remove from this authorization.",
      "location": "bodykey"
    },
    "note": {
      "type": "string",
      "required": false,
      "description": "A note to remind you what the OAuth token is for.",
      "location": "bodykey"
    },
    "note_url": {
      "type": "string",
      "required": false,
      "description": "A URL to remind you what app the OAuth token is for.",
      "location": "bodykey"
    },
    "fingerprint": {
      "type": "string",
      "required": false,
      "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
      "location": "bodykey"
    }
  },
  "DELETE /authorizations/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /applications/:client_id/tokens/:access_token": {
    "client_id": {
      "type": "string",
      "required": false,
      "description": "The 20 character OAuth app client key for which to create the token.",
      "location": "path"
    },
    "access_token": {
      "type": "string",
      "required": true,
      "description": "OAuth token",
      "location": "path"
    }
  },
  "POST /applications/:client_id/tokens/:access_token": {
    "client_id": {
      "type": "string",
      "required": false,
      "description": "The 20 character OAuth app client key for which to create the token.",
      "location": "path"
    },
    "access_token": {
      "type": "string",
      "required": true,
      "description": "OAuth token",
      "location": "path"
    }
  },
  "DELETE /applications/:client_id/tokens/:access_token": {
    "client_id": {
      "type": "string",
      "required": false,
      "description": "The 20 character OAuth app client key for which to create the token.",
      "location": "path"
    },
    "access_token": {
      "type": "string",
      "required": true,
      "description": "OAuth token",
      "location": "path"
    }
  },
  "GET /applications/grants": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /applications/grants/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "DELETE /applications/grants/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /authorizations": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PUT /authorizations/clients/:client_id": {
    "client_id": {
      "type": "string",
      "required": false,
      "description": "The 20 character OAuth app client key for which to create the token.",
      "location": "path"
    },
    "client_secret": {
      "type": "string",
      "required": true,
      "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
      "location": "bodykey"
    },
    "scopes": {
      "type": "string[]",
      "required": false,
      "description": "A list of scopes that this authorization is in.",
      "location": "bodykey"
    },
    "note": {
      "type": "string",
      "required": false,
      "description": "A note to remind you what the OAuth token is for.",
      "location": "bodykey"
    },
    "note_url": {
      "type": "string",
      "required": false,
      "description": "A URL to remind you what app the OAuth token is for.",
      "location": "bodykey"
    },
    "fingerprint": {
      "type": "string",
      "required": false,
      "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
      "location": "bodykey"
    }
  },
  "PUT /authorizations/clients/:client_id/:fingerprint": {
    "client_id": {
      "type": "string",
      "required": false,
      "description": "The 20 character OAuth app client key for which to create the token.",
      "location": "path"
    },
    "fingerprint": {
      "type": "string",
      "required": false,
      "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
      "location": "path"
    },
    "client_secret": {
      "type": "string",
      "required": true,
      "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
      "location": "bodykey"
    },
    "scopes": {
      "type": "string[]",
      "required": false,
      "description": "A list of scopes that this authorization is in.",
      "location": "bodykey"
    },
    "note": {
      "type": "string",
      "required": false,
      "description": "A note to remind you what the OAuth token is for.",
      "location": "bodykey"
    },
    "note_url": {
      "type": "string",
      "required": false,
      "description": "A URL to remind you what app the OAuth token is for.",
      "location": "bodykey"
    }
  },
  "DELETE /applications/:client_id/grants/:access_token": {
    "client_id": {
      "type": "string",
      "required": false,
      "description": "The 20 character OAuth app client key for which to create the token.",
      "location": "path"
    },
    "access_token": {
      "type": "string",
      "required": true,
      "description": "OAuth token",
      "location": "path"
    }
  },
  "GET /events": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/events": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/issues/events": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /networks/:owner/:repo/events": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /orgs/:org/events": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /users/:username/received_events": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /users/:username/received_events/public": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /users/:username/events": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /users/:username/events/public": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /users/:username/events/orgs/:org": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /feeds": {},
  "GET /notifications": {
    "all": {
      "type": "boolean",
      "required": false,
      "description": "If true, show notifications marked as read. Default: false",
      "default": "false",
      "location": "query"
    },
    "participating": {
      "type": "boolean",
      "required": false,
      "description": "If true, only shows notifications in which the user is directly participating or mentioned. Default: false",
      "default": "false",
      "location": "query"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "before": {
      "type": "string",
      "required": false,
      "description": "Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/notifications": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "all": {
      "type": "boolean",
      "required": false,
      "description": "If true, show notifications marked as read. Default: false",
      "default": "false",
      "location": "query"
    },
    "participating": {
      "type": "boolean",
      "required": false,
      "description": "If true, only shows notifications in which the user is directly participating or mentioned. Default: false",
      "default": "false",
      "location": "query"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "before": {
      "type": "string",
      "required": false,
      "description": "Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
      "location": "query"
    }
  },
  "PUT /notifications": {
    "last_read_at": {
      "type": "string",
      "required": false,
      "description": "Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now",
      "default": "Time.now",
      "location": "bodykey"
    }
  },
  "PUT /repos/:owner/:repo/notifications": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "last_read_at": {
      "type": "string",
      "required": false,
      "description": "Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now",
      "default": "Time.now",
      "location": "bodykey"
    }
  },
  "GET /notifications/threads/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PATCH /notifications/threads/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /notifications/threads/:id/subscription": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /notifications/threads/:id/subscription": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "subscribed": {
      "type": "boolean",
      "required": false,
      "description": "Determines if notifications should be received from this thread",
      "location": "bodykey"
    },
    "ignored": {
      "type": "boolean",
      "required": false,
      "description": "Determines if all notifications should be blocked from this thread",
      "location": "bodykey"
    }
  },
  "DELETE /notifications/threads/:id/subscription": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/stargazers": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /users/:username/starred": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sort": {
      "type": "string",
      "required": false,
      "enum": [
        "created",
        "updated"
      ],
      "default": "created",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/starred": {
    "sort": {
      "type": "string",
      "required": false,
      "enum": [
        "created",
        "updated"
      ],
      "default": "created",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/starred/:owner/:repo": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PUT /user/starred/:owner/:repo": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /user/starred/:owner/:repo": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/subscribers": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /users/:username/subscriptions": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/subscriptions": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/subscription": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PUT /repos/:owner/:repo/subscription": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "subscribed": {
      "type": "boolean",
      "required": false,
      "description": "Determines if notifications should be received from this repository.",
      "location": "bodykey"
    },
    "ignored": {
      "type": "boolean",
      "required": false,
      "description": "Determines if all notifications should be blocked from this repository.",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/subscription": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /gists/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /gists": {
    "files": {
      "type": "json",
      "required": true,
      "description": "Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'",
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "public": {
      "type": "boolean",
      "required": true,
      "location": "bodykey"
    }
  },
  "PATCH /gists/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "description": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "files": {
      "type": "json",
      "required": true,
      "description": "Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'",
      "location": "bodykey"
    },
    "content": {
      "type": "string",
      "required": false,
      "description": "Updated file contents.",
      "location": "bodykey"
    },
    "filename": {
      "type": "string",
      "required": false,
      "description": "New name for this file.",
      "location": "bodykey"
    }
  },
  "PUT /gists/:id/star": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /gists/:id/star": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /gists/:id/forks": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /gists/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /users/:username/gists": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /gists": {
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /gists/public": {
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    }
  },
  "GET /gists/starred": {
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    }
  },
  "GET /gists/:id/:sha": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /gists/:id/commits": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /gists/:id/star": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /gists/:id/forks": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /gists/:gist_id/comments": {
    "gist_id": {
      "type": "string",
      "required": true,
      "description": "Id (SHA1 hash) of the gist.",
      "location": "path"
    }
  },
  "GET /gists/:gist_id/comments/:id": {
    "gist_id": {
      "type": "string",
      "required": true,
      "description": "Id (SHA1 hash) of the gist.",
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /gists/:gist_id/comments": {
    "gist_id": {
      "type": "string",
      "required": true,
      "description": "Id (SHA1 hash) of the gist.",
      "location": "path"
    },
    "body": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "PATCH /gists/:gist_id/comments/:id": {
    "gist_id": {
      "type": "string",
      "required": true,
      "description": "Id (SHA1 hash) of the gist.",
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "body": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "DELETE /gists/:gist_id/comments/:id": {
    "gist_id": {
      "type": "string",
      "required": true,
      "description": "Id (SHA1 hash) of the gist.",
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/git/blobs/:sha": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/git/blobs": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "content": {
      "type": "string",
      "required": true,
      "allow-empty": true,
      "location": "bodykey"
    },
    "encoding": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/git/commits/:sha": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/git/commits": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "message": {
      "type": "string",
      "required": true,
      "description": "String of the commit message",
      "location": "bodykey"
    },
    "tree": {
      "type": "string",
      "required": true,
      "description": "String of the SHA of the tree object this commit points to",
      "location": "bodykey"
    },
    "parents": {
      "type": "string[]",
      "required": true,
      "description": "Array of the SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided, for a merge commit, an array of more than one should be provided.",
      "location": "bodykey"
    },
    "author": {
      "type": "json",
      "required": false,
      "location": "bodykey"
    },
    "committer": {
      "type": "json",
      "required": false,
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/git/refs/:ref": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": true,
      "allow-empty": true,
      "description": "String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.",
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/git/refs": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/git/refs/tags": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/git/refs": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": true,
      "description": "The name of the fully qualified reference (ie: refs/heads/master). If it doesn't start with 'refs' and have at least two slashes, it will be rejected. NOTE: After creating the reference, on calling (get|update|delete)Reference, drop the leading 'refs/' when providing the 'ref' param.",
      "location": "bodykey"
    },
    "sha": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "PATCH /repos/:owner/:repo/git/refs/:ref": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": true,
      "allow-empty": true,
      "description": "String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.",
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "force": {
      "type": "boolean",
      "required": false,
      "description": "Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure you’re not overwriting work.",
      "default": "false",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/git/refs/:ref": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": true,
      "allow-empty": true,
      "description": "String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.",
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/git/tags/:sha": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/git/tags": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "tag": {
      "type": "string",
      "required": true,
      "description": "String of the tag",
      "location": "bodykey"
    },
    "message": {
      "type": "string",
      "required": true,
      "description": "String of the tag message",
      "location": "bodykey"
    },
    "object": {
      "type": "string",
      "required": true,
      "description": "String of the SHA of the git object this is tagging",
      "location": "bodykey"
    },
    "type": {
      "type": "string",
      "required": true,
      "description": "String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob.",
      "location": "bodykey"
    },
    "tagger": {
      "type": "json",
      "required": true,
      "description": "JSON object that contains the following keys: `name` - String of the name of the author of the tag, `email` - String of the email of the author of the tag, `date` - Timestamp of when this object was tagged",
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/git/trees/:sha": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "recursive": {
      "type": "boolean",
      "required": false,
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/git/trees": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "tree": {
      "type": "json",
      "required": true,
      "description": "Array of Hash objects (of path, mode, type and sha) specifying a tree structure",
      "location": "bodykey"
    },
    "base_tree": {
      "type": "string",
      "required": false,
      "description": "String of the SHA1 of the tree you want to update with new data",
      "location": "bodykey"
    }
  },
  "GET /app/installations": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /installations/:installation_id/access_tokens": {
    "installation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "user_id": {
      "type": "string",
      "required": false,
      "description": "The id of the user for whom the app is acting on behalf of.",
      "location": "bodykey"
    }
  },
  "GET /installation/repositories": {
    "user_id": {
      "type": "string",
      "required": false,
      "description": "The integer ID of a user, to filter results to repositories that are visible to both the installation and the given user.",
      "location": "query"
    }
  },
  "PUT /installations/:installation_id/repositories/:repository_id": {
    "installation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repository_id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /installations/:installation_id/repositories/:repository_id": {
    "installation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repository_id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /app": {},
  "GET /apps/:app_slug": {
    "app_slug": {
      "type": "string",
      "required": true,
      "description": "The URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., https://github.com/settings/apps/:app_slug).",
      "location": "path"
    }
  },
  "GET /app/installations/:installation_id": {
    "installation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /marketplace_listing/plans": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /marketplace_listing/stubbed/plans": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /marketplace_listing/plans/:id/accounts": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /marketplace_listing/stubbed/plans/:id/accounts": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /marketplace_listing/accounts/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /marketplace_listing/stubbed/accounts/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/issues/:number": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/issues": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "title": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "body": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "assignee": {
      "type": "string",
      "required": false,
      "description": "Login for the user that this issue should be assigned to.",
      "location": "bodykey"
    },
    "milestone": {
      "type": "number",
      "required": false,
      "description": "Milestone to associate this issue with.",
      "location": "bodykey"
    },
    "labels": {
      "type": "string[]",
      "required": false,
      "description": "Array of strings - Labels to associate with this issue.",
      "location": "bodykey"
    },
    "assignees": {
      "type": "string[]",
      "required": false,
      "description": "Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.",
      "location": "bodykey"
    }
  },
  "PATCH /repos/:owner/:repo/issues/:number": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "title": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "body": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "assignee": {
      "type": "string",
      "required": false,
      "description": "Login for the user that this issue should be assigned to.",
      "location": "bodykey"
    },
    "state": {
      "type": "string",
      "required": false,
      "description": "open or closed",
      "enum": [
        "open",
        "closed"
      ],
      "default": "open",
      "location": "bodykey"
    },
    "milestone": {
      "type": "number",
      "required": false,
      "description": "Milestone to associate this issue with.",
      "location": "bodykey"
    },
    "labels": {
      "type": "string[]",
      "required": false,
      "description": "Array of strings - Labels to associate with this issue.",
      "location": "bodykey"
    },
    "assignees": {
      "type": "string[]",
      "required": false,
      "description": "Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.",
      "location": "bodykey"
    }
  },
  "PUT /repos/:owner/:repo/issues/:number/lock": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /repos/:owner/:repo/issues/:number/lock": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    }
  },
  "GET /issues": {
    "filter": {
      "type": "string",
      "required": false,
      "enum": [
        "all",
        "assigned",
        "created",
        "mentioned",
        "subscribed"
      ],
      "location": "query"
    },
    "state": {
      "type": "string",
      "required": false,
      "description": "open, closed, or all",
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "query"
    },
    "labels": {
      "type": "string",
      "required": false,
      "description": "String list of comma separated Label names. Example: bug,ui,@high",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "enum": [
        "created",
        "updated",
        "comments"
      ],
      "default": "created",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/issues": {
    "filter": {
      "type": "string",
      "required": false,
      "enum": [
        "all",
        "assigned",
        "created",
        "mentioned",
        "subscribed"
      ],
      "location": "query"
    },
    "state": {
      "type": "string",
      "required": false,
      "description": "open, closed, or all",
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "query"
    },
    "labels": {
      "type": "string",
      "required": false,
      "description": "String list of comma separated Label names. Example: bug,ui,@high",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "enum": [
        "created",
        "updated",
        "comments"
      ],
      "default": "created",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /orgs/:org/issues": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "filter": {
      "type": "string",
      "required": false,
      "enum": [
        "all",
        "assigned",
        "created",
        "mentioned",
        "subscribed"
      ],
      "location": "query"
    },
    "state": {
      "type": "string",
      "required": false,
      "description": "open, closed, or all",
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "query"
    },
    "labels": {
      "type": "string",
      "required": false,
      "description": "String list of comma separated Label names. Example: bug,ui,@high",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "enum": [
        "created",
        "updated",
        "comments"
      ],
      "default": "created",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/issues": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "milestone": {
      "type": "string",
      "required": false,
      "validation": "^([0-9]+|none|\\*)$",
      "location": "query"
    },
    "state": {
      "type": "string",
      "required": false,
      "description": "open, closed, or all",
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "query"
    },
    "assignee": {
      "type": "string",
      "required": false,
      "description": "String User login, `none` for Issues with no assigned User. `*` for Issues with any assigned User.",
      "location": "query"
    },
    "creator": {
      "type": "string",
      "required": false,
      "description": "The user that created the issue.",
      "location": "query"
    },
    "mentioned": {
      "type": "string",
      "required": false,
      "description": "String User login.",
      "location": "query"
    },
    "labels": {
      "type": "string",
      "required": false,
      "description": "String list of comma separated Label names. Example: bug,ui,@high",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "enum": [
        "created",
        "updated",
        "comments"
      ],
      "default": "created",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/assignees": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/assignees/:assignee": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "assignee": {
      "type": "string",
      "required": true,
      "description": "Login for the user that this issue should be assigned to.",
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/issues/:number/assignees": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "assignees": {
      "type": "string[]",
      "required": true,
      "description": "Logins for the users that should be added to the issue.",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/issues/:number/assignees": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "body": {
      "type": "json",
      "required": true,
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/issues/:number/comments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/issues/comments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sort": {
      "type": "string",
      "required": false,
      "enum": [
        "created",
        "updated"
      ],
      "default": "created",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/issues/comments/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/issues/:number/comments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "body": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "PATCH /repos/:owner/:repo/issues/comments/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "body": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/issues/comments/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/issues/:issue_number/events": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "issue_number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/issues/events/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/labels": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/labels/:name": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/labels": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "color": {
      "type": "string",
      "required": true,
      "description": "6 character hex code, without a leading #.",
      "location": "bodykey"
    }
  },
  "PATCH /repos/:owner/:repo/labels/:oldname": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "oldname": {
      "type": "string",
      "required": true,
      "description": "The old name of the label.",
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "description": "The new name of the label.",
      "location": "bodykey"
    },
    "color": {
      "type": "string",
      "required": true,
      "description": "6 character hex code, without a leading #.",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/labels/:name": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/issues/:number/labels": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/issues/:number/labels": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "labels": {
      "type": "string[]",
      "required": true,
      "location": "body"
    }
  },
  "DELETE /repos/:owner/:repo/issues/:number/labels/:name": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /repos/:owner/:repo/issues/:number/labels": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "labels": {
      "type": "string[]",
      "required": true,
      "description": "Sending an empty array ([]) will remove all Labels from the Issue.",
      "location": "body"
    }
  },
  "DELETE /repos/:owner/:repo/issues/:number/labels": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/milestones/:number/labels": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/milestones": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "state": {
      "type": "string",
      "required": false,
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "due_on, completeness, default: due_on",
      "enum": [
        "due_on",
        "completeness"
      ],
      "default": "due_on",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "asc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/milestones/:number": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/milestones": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "title": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "state": {
      "type": "string",
      "required": false,
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "due_on": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "bodykey"
    }
  },
  "PATCH /repos/:owner/:repo/milestones/:number": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "title": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "state": {
      "type": "string",
      "required": false,
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "due_on": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/milestones/:number": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/issues/:issue_number/timeline": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "issue_number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /orgs/:org/migrations": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repositories": {
      "type": "string[]",
      "required": true,
      "description": "A list of arrays indicating which repositories should be migrated.",
      "location": "bodykey"
    },
    "lock_repositories": {
      "type": "boolean",
      "required": false,
      "description": "Indicates whether repositories should be locked (to prevent manipulation) while migrating data. Default: false.",
      "default": "false",
      "location": "bodykey"
    },
    "exclude_attachments": {
      "type": "boolean",
      "required": false,
      "description": "Indicates whether attachments should be excluded from the migration (to reduce migration archive file size). Default: false.",
      "default": "false",
      "location": "bodykey"
    }
  },
  "GET /orgs/:org/migrations": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /orgs/:org/migrations/:id": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /orgs/:org/migrations/:id/archive": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /orgs/:org/migrations/:id/archive": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /orgs/:org/migrations/:id/repos/:repo_name/lock": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo_name": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /repos/:owner/:repo/import": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "vcs_url": {
      "type": "string",
      "required": true,
      "description": "The URL of the originating repository.",
      "location": "bodykey"
    },
    "vcs": {
      "type": "string",
      "required": false,
      "description": "The originating VCS type. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.",
      "enum": [
        "subversion",
        "git",
        "mercurial",
        "tfvc"
      ],
      "location": "bodykey"
    },
    "vcs_username": {
      "type": "string",
      "required": false,
      "description": "If authentication is required, the username to provide to vcs_url.",
      "location": "bodykey"
    },
    "vcs_password": {
      "type": "string",
      "required": false,
      "description": "If authentication is required, the password to provide to vcs_url.",
      "location": "bodykey"
    },
    "tfvc_project": {
      "type": "string",
      "required": false,
      "description": "For a tfvc import, the name of the project that is being imported.",
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/import": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PATCH /repos/:owner/:repo/import": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "vcs_username": {
      "type": "string",
      "required": false,
      "description": "The username to provide to the originating repository."
    },
    "vcs_password": {
      "type": "string",
      "required": false,
      "description": "The password to provide to the originating repository."
    }
  },
  "GET /repos/:owner/:repo/import/authors": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "since": {
      "type": "string",
      "required": false,
      "description": "Only authors found after this id are returned. Provide the highest author ID you've seen so far. New authors may be added to the list at any point while the importer is performing the raw step.",
      "location": "query"
    }
  },
  "PATCH /repos/:owner/:repo/import/authors/:author_id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "author_id": {
      "type": "string",
      "required": true,
      "description": "The commit author id.",
      "location": "path"
    },
    "email": {
      "type": "string",
      "required": false,
      "description": "The new Git author email.",
      "location": "bodykey"
    },
    "name": {
      "type": "string",
      "required": false,
      "description": "The new Git author name.",
      "location": "bodykey"
    }
  },
  "PATCH /:owner/:name/import/lfs": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "use_lfs": {
      "type": "string",
      "required": true,
      "description": "Can be one of `opt_in` (large files will be stored using Git LFS) or `opt_out` (large files will be removed during the import).",
      "location": "bodykey"
    }
  },
  "GET /:owner/:name/import/large_files": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /repos/:owner/:repo/import": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /codes_of_conduct": {},
  "GET /codes_of_conduct/:key": {
    "key": {
      "type": "string",
      "required": true,
      "description": "Ex: contributor_covenant",
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/community/code_of_conduct": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /emojis": {},
  "GET /gitignore/templates": {},
  "GET /gitignore/templates/:name": {
    "name": {
      "type": "string",
      "required": true,
      "description": "The name of the .gitignore template to get e.g. 'C'",
      "location": "path"
    }
  },
  "GET /licenses": {},
  "GET /licenses/:license": {
    "license": {
      "type": "string",
      "required": true,
      "description": "Ex: /licenses/mit",
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/license": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /markdown": {
    "text": {
      "type": "string",
      "required": true,
      "description": "The Markdown text to render",
      "location": "bodykey"
    },
    "mode": {
      "type": "string",
      "required": false,
      "description": "The rendering mode, `markdown` to render a document as plain Markdown, just like README files are rendered. `gfm` to render a document as user-content, e.g. like user comments or issues are rendered. In GFM mode, hard line breaks are always taken into account, and issue and user mentions are linked accordingly.",
      "enum": [
        "markdown",
        "gfm"
      ],
      "default": "markdown",
      "location": "bodykey"
    },
    "context": {
      "type": "string",
      "required": false,
      "description": "The repository context. Only taken into account when rendering as `gfm`",
      "location": "bodykey"
    }
  },
  "POST /markdown/raw": {
    "data": {
      "type": "string",
      "required": true,
      "description": "Raw data to send as the body of the request",
      "location": "body"
    }
  },
  "GET /meta": {},
  "GET /rate_limit": {},
  "GET /orgs/:org": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PATCH /orgs/:org": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "billing_email": {
      "type": "string",
      "required": false,
      "description": "Billing email address. This address is not publicized.",
      "location": "bodykey"
    },
    "company": {
      "type": "string",
      "required": false,
      "description": "The company name.",
      "location": "bodykey"
    },
    "email": {
      "type": "string",
      "required": false,
      "description": "The publicly visible email address.",
      "location": "bodykey"
    },
    "location": {
      "type": "string",
      "required": false,
      "description": "The location.",
      "location": "bodykey"
    },
    "name": {
      "type": "string",
      "required": false,
      "description": "The shorthand name of the company.",
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "description": "The description of the company.",
      "location": "bodykey"
    },
    "default_repository_permission": {
      "type": "string",
      "required": false,
      "description": "Default permission level members have for organization repositories.",
      "enum": [
        "read",
        "write",
        "admin",
        "none"
      ],
      "default": "read",
      "location": "bodykey"
    },
    "members_can_create_repositories": {
      "type": "boolean",
      "required": false,
      "description": "Toggles ability of non-admin organization members to create repositories.",
      "default": true,
      "location": "bodykey"
    }
  },
  "GET /organizations": {
    "since": {
      "type": "string",
      "required": false,
      "description": "The integer ID of the last Organization that you've seen.",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /users/:username/orgs": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /orgs/:org/members": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "filter": {
      "type": "string",
      "required": false,
      "description": "Filter members returned in the list.",
      "enum": [
        "all",
        "2fa_disabled"
      ],
      "default": "all",
      "location": "query"
    },
    "role": {
      "type": "string",
      "required": false,
      "description": "Filter members returned by their role.",
      "enum": [
        "all",
        "admin",
        "member"
      ],
      "default": "all",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /orgs/:org/members/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /orgs/:org/members/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /orgs/:org/public_members": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /orgs/:org/public_members/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /orgs/:org/public_members/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /orgs/:org/public_members/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /orgs/:org/memberships/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /orgs/:org/memberships/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "role": {
      "type": "string",
      "required": true,
      "description": "The role to give the user in the organization.",
      "enum": [
        "admin",
        "member"
      ],
      "default": "member",
      "location": "bodykey"
    }
  },
  "DELETE /orgs/:org/memberships/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /orgs/:org/invitations": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /orgs/:org/outside_collaborators": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "filter": {
      "type": "string",
      "required": false,
      "description": "Filter the list of outside collaborators.",
      "enum": [
        "all",
        "2fa_disabled"
      ],
      "default": "all",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "DELETE /orgs/:org/outside_collaborators/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /orgs/:org/outside_collaborators/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /orgs/:org/teams": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /teams/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /orgs/:org/teams": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "description": "The description of the team.",
      "location": "bodykey"
    },
    "maintainers": {
      "type": "string[]",
      "required": false,
      "description": "The logins of organization members to add as maintainers of the team.",
      "location": "bodykey"
    },
    "repo_names": {
      "type": "string[]",
      "required": false,
      "description": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.",
      "location": "bodykey"
    },
    "privacy": {
      "type": "string",
      "required": false,
      "description": "The level of privacy this team should have.",
      "enum": [
        "secret",
        "closed"
      ],
      "default": "secret",
      "location": "bodykey"
    },
    "parent_team_id": {
      "type": "string",
      "required": false,
      "description": "The ID of a team to set as the parent team.",
      "location": "bodykey"
    }
  },
  "PATCH /teams/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "description": "The description of the team.",
      "location": "bodykey"
    },
    "privacy": {
      "type": "string",
      "required": false,
      "description": "The level of privacy this team should have.",
      "enum": [
        "secret",
        "closed"
      ],
      "default": "secret",
      "location": "bodykey"
    },
    "parent_team_id": {
      "type": "string",
      "required": false,
      "description": "The ID of a team to set as the parent team.",
      "location": "bodykey"
    }
  },
  "DELETE /teams/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /teams/:id/members": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "role": {
      "type": "string",
      "required": false,
      "description": "Filters members returned by their role in the team.",
      "enum": [
        "member",
        "maintainer",
        "all"
      ],
      "default": "all",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /teams/:id/teams": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /teams/:id/memberships/:username": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /teams/:id/memberships/:username": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "role": {
      "type": "string",
      "required": false,
      "description": "The role that this user should have in the team.",
      "enum": [
        "member",
        "maintainer"
      ],
      "default": "member",
      "location": "bodykey"
    }
  },
  "DELETE /teams/:id/memberships/:username": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /teams/:id/repos": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /teams/:id/invitations": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /teams/:id/repos/:owner/:repo": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /teams/:id/repos/:org/:repo": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "permission": {
      "type": "string",
      "required": false,
      "description": "`pull` - team members can pull, but not push or administer this repository, `push` - team members can pull and push, but not administer this repository, `admin` - team members can pull, push and administer this repository.",
      "enum": [
        "pull",
        "push",
        "admin"
      ],
      "location": "bodykey"
    }
  },
  "DELETE /teams/:id/repos/:owner/:repo": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /orgs/:org/hooks": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /orgs/:org/hooks/:id": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /orgs/:org/hooks": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "description": "Must be passed as \"web\".",
      "location": "bodykey"
    },
    "config": {
      "type": "json",
      "required": true,
      "description": "Key/value pairs to provide settings for this webhook",
      "location": "bodykey"
    },
    "events": {
      "type": "string[]",
      "required": false,
      "description": "Determines what events the hook is triggered for. Default: [\"push\"].",
      "default": "[\"push\"]",
      "location": "bodykey"
    },
    "active": {
      "type": "boolean",
      "required": false,
      "description": "Determines whether the hook is actually triggered on pushes.",
      "location": "bodykey"
    }
  },
  "PATCH /orgs/:org/hooks/:id": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "config": {
      "type": "json",
      "required": true,
      "description": "Key/value pairs to provide settings for this webhook",
      "location": "bodykey"
    },
    "events": {
      "type": "string[]",
      "required": false,
      "description": "Determines what events the hook is triggered for. Default: [\"push\"].",
      "default": "[\"push\"]",
      "location": "bodykey"
    },
    "active": {
      "type": "boolean",
      "required": false,
      "description": "Determines whether the hook is actually triggered on pushes.",
      "location": "bodykey"
    }
  },
  "POST /orgs/:org/hooks/:id/pings": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /orgs/:org/hooks/:id": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /orgs/:org/blocks": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /orgs/:org/blocks/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /orgs/:org/blocks/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /orgs/:org/blocks/:username": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/projects": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "state": {
      "type": "string",
      "required": false,
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "query"
    }
  },
  "GET /orgs/:org/projects": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "state": {
      "type": "string",
      "required": false,
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "query"
    }
  },
  "GET /projects/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/projects": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "body": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    }
  },
  "POST /orgs/:org/projects": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "body": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    }
  },
  "PATCH /projects/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "body": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "state": {
      "type": "string",
      "required": false,
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "bodykey"
    }
  },
  "DELETE /projects/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /projects/columns/:column_id/cards": {
    "column_id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /projects/columns/cards/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /projects/columns/:column_id/cards": {
    "column_id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "note": {
      "type": "string",
      "required": false,
      "description": "The note of the card.",
      "location": "bodykey"
    },
    "content_id": {
      "type": "string",
      "required": false,
      "description": "The id of the Issue or Pull Request to associate with this card.",
      "location": "bodykey"
    },
    "content_type": {
      "type": "string",
      "required": false,
      "description": "The type of content to associate with this card. Can be either 'Issue' or 'PullRequest'.",
      "location": "bodykey"
    }
  },
  "PATCH /projects/columns/cards/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "note": {
      "type": "string",
      "required": false,
      "description": "The note of the card.",
      "location": "bodykey"
    }
  },
  "DELETE /projects/columns/cards/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /projects/columns/cards/:id/moves": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "position": {
      "type": "string",
      "required": true,
      "validation": "^(top|bottom|after:\\d+)$",
      "description": "Can be one of top, bottom, or after:<card-id>, where <card-id> is the id value of a card in the same project.",
      "location": "bodykey"
    },
    "column_id": {
      "type": "string",
      "required": false,
      "description": "The id value of a column in the same project.",
      "location": "bodykey"
    }
  },
  "GET /projects/:project_id/columns": {
    "project_id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /projects/columns/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /projects/:project_id/columns": {
    "project_id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "PATCH /projects/columns/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "DELETE /projects/columns/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /projects/columns/:id/moves": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "position": {
      "type": "string",
      "required": true,
      "validation": "^(first|last|after:\\d+)$",
      "description": "Can be one of first, last, or after:<column-id>, where <column-id> is the id value of a column in the same project.",
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/pulls/:number": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/pulls": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "issue": {
      "type": "number",
      "required": true,
      "description": "The issue number in this repository to turn into a Pull Request.",
      "location": "bodykey"
    },
    "head": {
      "type": "string",
      "required": true,
      "description": "The branch (or git ref) where your changes are implemented.",
      "location": "bodykey"
    },
    "base": {
      "type": "string",
      "required": true,
      "description": "The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.",
      "location": "bodykey"
    }
  },
  "PATCH /repos/:owner/:repo/pulls/:number": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "title": {
      "type": "string",
      "required": false,
      "description": "The title of the pull request.",
      "location": "bodykey"
    },
    "body": {
      "type": "string",
      "required": false,
      "description": "The contents of the pull request.",
      "location": "bodykey"
    },
    "state": {
      "type": "string",
      "required": false,
      "description": "open or closed",
      "enum": [
        "open",
        "closed"
      ],
      "location": "bodykey"
    },
    "base": {
      "type": "string",
      "required": false,
      "description": "The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.",
      "location": "bodykey"
    },
    "maintainer_can_modify": {
      "type": "boolean",
      "required": false,
      "default": "true",
      "description": "Indicates whether maintainers can modify the pull request.",
      "location": "bodykey"
    }
  },
  "PUT /repos/:owner/:repo/pulls/:number/merge": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "commit_title": {
      "type": "string",
      "required": false,
      "description": "Title for the automatic commit message. (In preview period. See README.)",
      "location": "bodykey"
    },
    "commit_message": {
      "type": "string",
      "required": false,
      "description": "Extra detail to append to automatic commit message.",
      "location": "bodykey"
    },
    "sha": {
      "type": "string",
      "required": false,
      "description": "SHA that pull request head must match to allow merge",
      "location": "bodykey"
    },
    "merge_method": {
      "type": "string",
      "required": false,
      "description": "Merge method to use. Possible values are `merge`, `squash`, or `rebase`. (In preview period. See README.)",
      "enum": [
        "merge",
        "squash",
        "rebase"
      ],
      "default": "merge",
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/pulls": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "state": {
      "type": "string",
      "required": false,
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "default": "open",
      "location": "query"
    },
    "head": {
      "type": "string",
      "required": false,
      "description": "Filter pulls by head user and branch name in the format of user:ref-name. Example: github:new-script-format.",
      "location": "query"
    },
    "base": {
      "type": "string",
      "required": false,
      "description": "Filter pulls by base branch name. Example: gh-pages.",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "Possible values are: `created`, `updated`, `popularity`, `long-running`, Default: `created`",
      "enum": [
        "created",
        "updated",
        "popularity",
        "long-running"
      ],
      "default": "created",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/pulls/:number/commits": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/pulls/:number/files": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/pulls/:number/merge": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/pulls/:number/reviews": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/pulls/:number/reviews/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /repos/:owner/:repo/pulls/:number/reviews/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/pulls/:number/reviews/:id/comments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/pulls/:number/reviews": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "commit_id": {
      "type": "string",
      "required": false,
      "description": "Sha of the commit to comment on.",
      "location": "bodykey"
    },
    "body": {
      "type": "string",
      "required": false,
      "description": "The body text of the pull request review.",
      "location": "bodykey"
    },
    "event": {
      "type": "string",
      "required": false,
      "description": "The event to perform on the review upon submission, can be one of APPROVE, REQUEST_CHANGES, or COMMENT. If left blank, the review will be in the PENDING state.",
      "enum": [
        "APPROVE",
        "REQUEST_CHANGES",
        "COMMENT",
        "PENDING"
      ],
      "default": "PENDING",
      "location": "bodykey"
    },
    "comments": {
      "type": "string[]",
      "required": false,
      "description": "An array of draft review comment objects. Draft review comments must include a `path`, `position`, and `body`.",
      "location": "bodykey"
    }
  },
  "POST /repos/:owner/:repo/pulls/:number/reviews/:id/events": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "body": {
      "type": "string",
      "required": false,
      "description": "The body text of the pull request review.",
      "location": "bodykey"
    },
    "event": {
      "type": "string",
      "required": false,
      "description": "The event to perform on the review upon submission, can be one of APPROVE, REQUEST_CHANGES, or COMMENT. If left blank, the review will be in the PENDING state.",
      "enum": [
        "APPROVE",
        "REQUEST_CHANGES",
        "COMMENT",
        "PENDING"
      ],
      "default": "PENDING",
      "location": "bodykey"
    }
  },
  "PUT /repos/:owner/:repo/pulls/:number/reviews/:id/dismissals": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "message": {
      "type": "string",
      "required": false,
      "description": "The message for the pull request review dismissal.",
      "location": "bodykey"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "bodykey"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/pulls/:number/comments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/pulls/comments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "Possible values are: `created`, `updated`, Default: `created`",
      "enum": [
        "created",
        "updated"
      ],
      "default": "created",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/pulls/comments/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/pulls/:number/comments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "body": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "in_reply_to": {
      "type": "number",
      "required": true,
      "description": "The comment id to reply to.",
      "location": "bodykey"
    }
  },
  "PATCH /repos/:owner/:repo/pulls/comments/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "body": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/pulls/comments/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/pulls/:number/requested_reviewers": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/pulls/:number/requested_reviewers": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "reviewers": {
      "type": "string[]",
      "required": false,
      "description": "An array of user logins that will be requested.",
      "location": "bodykey"
    },
    "team_reviewers": {
      "type": "string[]",
      "required": false,
      "description": "An array of team slugs that will be requested.",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/pulls/:number/requested_reviewers": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "reviewers": {
      "type": "string[]",
      "required": false,
      "description": "An array of user logins that will be requested.",
      "location": "bodykey"
    },
    "team_reviewers": {
      "type": "string[]",
      "required": false,
      "description": "An array of team slugs that will be requested.",
      "location": "bodykey"
    }
  },
  "DELETE /reactions/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/comments/:id/reactions": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "content": {
      "type": "string",
      "required": false,
      "description": "Indicates which type of reaction to return.",
      "enum": [
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray"
      ],
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/comments/:id/reactions": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "content": {
      "type": "string",
      "required": true,
      "description": "The reaction type.",
      "enum": [
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray"
      ],
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/issues/:number/reactions": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "content": {
      "type": "string",
      "required": false,
      "description": "Indicates which type of reaction to return.",
      "enum": [
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray"
      ],
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/issues/:number/reactions": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "number": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "content": {
      "type": "string",
      "required": true,
      "description": "The reaction type.",
      "enum": [
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray"
      ],
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/issues/comments/:id/reactions": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "content": {
      "type": "string",
      "required": false,
      "description": "Indicates which type of reaction to return.",
      "enum": [
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray"
      ],
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/issues/comments/:id/reactions": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "content": {
      "type": "string",
      "required": true,
      "description": "The reaction type.",
      "enum": [
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray"
      ],
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/pulls/comments/:id/reactions": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "content": {
      "type": "string",
      "required": false,
      "description": "Indicates which type of reaction to return.",
      "enum": [
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray"
      ],
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/pulls/comments/:id/reactions": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "content": {
      "type": "string",
      "required": true,
      "description": "The reaction type.",
      "enum": [
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray"
      ],
      "location": "bodykey"
    }
  },
  "POST /user/repos": {
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "homepage": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "private": {
      "type": "boolean",
      "required": false,
      "description": "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.",
      "default": "false",
      "location": "bodykey"
    },
    "has_issues": {
      "type": "boolean",
      "required": false,
      "description": "True to enable issues for this repository, false to disable them. Default is true.",
      "default": "true",
      "location": "bodykey"
    },
    "has_projects": {
      "type": "boolean",
      "required": false,
      "description": "True to enable projects for this repository, false to disable them. Default is true.",
      "default": "true",
      "location": "bodykey"
    },
    "has_wiki": {
      "type": "boolean",
      "required": false,
      "description": "True to enable the wiki for this repository, false to disable it. Default is true.",
      "default": "true",
      "location": "bodykey"
    },
    "team_id": {
      "type": "number",
      "required": false,
      "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
      "location": "bodykey"
    },
    "auto_init": {
      "type": "boolean",
      "required": false,
      "description": "True to create an initial commit with empty README. Default is false",
      "default": "false",
      "location": "bodykey"
    },
    "gitignore_template": {
      "type": "string",
      "required": false,
      "description": "Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.",
      "location": "bodykey"
    },
    "license_template": {
      "type": "string",
      "required": false,
      "description": "Desired LICENSE template to apply. Use the name of the template without the extension. For example, \"mit\" or \"mozilla\".",
      "location": "bodykey"
    },
    "allow_squash_merge": {
      "type": "boolean",
      "required": false,
      "description": "Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true. (In preview period. See README.)",
      "default": "true",
      "location": "bodykey"
    },
    "allow_merge_commit": {
      "type": "boolean",
      "required": false,
      "description": "Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true. (In preview period. See README.)",
      "default": "true",
      "location": "bodykey"
    },
    "allow_rebase_merge": {
      "type": "boolean",
      "required": false,
      "description": "Either true to allow rebase-merging pull requests, or false to prevent rebase-merging. Default: true. (In preview period. See README.)",
      "default": "true",
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PATCH /repos/:owner/:repo": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "homepage": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "private": {
      "type": "boolean",
      "required": false,
      "description": "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.",
      "default": "false",
      "location": "bodykey"
    },
    "has_issues": {
      "type": "boolean",
      "required": false,
      "description": "True to enable issues for this repository, false to disable them. Default is true.",
      "default": "true",
      "location": "bodykey"
    },
    "has_projects": {
      "type": "boolean",
      "required": false,
      "description": "True to enable projects for this repository, false to disable them. Default is true.",
      "default": "true",
      "location": "bodykey"
    },
    "has_wiki": {
      "type": "boolean",
      "required": false,
      "description": "True to enable the wiki for this repository, false to disable it. Default is true.",
      "default": "true",
      "location": "bodykey"
    },
    "default_branch": {
      "type": "string",
      "required": false,
      "description": "Updates the default branch for this repository.",
      "location": "bodykey"
    },
    "allow_squash_merge": {
      "type": "boolean",
      "required": false,
      "description": "Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true. (In preview period. See README.)",
      "default": "true",
      "location": "bodykey"
    },
    "allow_merge_commit": {
      "type": "boolean",
      "required": false,
      "description": "Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true. (In preview period. See README.)",
      "default": "true",
      "location": "bodykey"
    },
    "allow_rebase_merge": {
      "type": "boolean",
      "required": false,
      "description": "Either true to allow rebase-merging pull requests, or false to prevent rebase-merging. Default: true. (In preview period. See README.)",
      "default": "true",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/forks": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "organization": {
      "type": "string",
      "required": false,
      "description": "Optional parameter to specify the organization name if forking into an organization.",
      "location": "bodykey"
    }
  },
  "POST /repos/:owner/:repo/merges": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "base": {
      "type": "string",
      "required": true,
      "description": "The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.",
      "location": "bodykey"
    },
    "head": {
      "type": "string",
      "required": true,
      "description": "The branch (or git ref) where your changes are implemented.",
      "location": "bodykey"
    },
    "commit_message": {
      "type": "string",
      "required": false,
      "description": "Commit message to use for the merge commit. If omitted, a default message will be used.",
      "location": "bodykey"
    }
  },
  "GET /user/repos": {
    "visibility": {
      "type": "string",
      "required": false,
      "description": "Can be one of `all`, `public`, or `private`. Default: `all`.",
      "enum": [
        "all",
        "public",
        "private"
      ],
      "default": "all",
      "location": "query"
    },
    "affiliation": {
      "type": "string",
      "required": false,
      "description": "Comma-separated list of values. Can include: `owner`, `collaborator`, `organization_member`.",
      "default": "owner,collaborator,organization_member",
      "location": "query"
    },
    "type": {
      "type": "string",
      "required": false,
      "description": "Possible values: `all`, `owner`, `public`, `private`, `member`. Default: `all`.",
      "enum": [
        "all",
        "owner",
        "public",
        "private",
        "member"
      ],
      "default": "all",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`.",
      "enum": [
        "created",
        "updated",
        "pushed",
        "full_name"
      ],
      "default": "full_name",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /users/:username/repos": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "type": {
      "type": "string",
      "required": false,
      "description": "Possible values: `all`, `owner`, `member`. Default: `owner`.",
      "enum": [
        "all",
        "owner",
        "member"
      ],
      "default": "owner",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`.",
      "enum": [
        "created",
        "updated",
        "pushed",
        "full_name"
      ],
      "default": "full_name",
      "location": "query"
    },
    "direction": {
      "type": "string",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /orgs/:org/repos": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "type": {
      "type": "string",
      "required": false,
      "description": "Possible values: `all`, `public`, `private`, `forks`, `sources`, `member`. Default: `all`.",
      "enum": [
        "all",
        "public",
        "private",
        "forks",
        "sources",
        "member"
      ],
      "default": "all",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repositories": {
    "since": {
      "type": "string",
      "required": false,
      "description": "The integer ID of the last Repository that you've seen.",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /orgs/:org/repos": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "homepage": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "private": {
      "type": "boolean",
      "required": false,
      "description": "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.",
      "default": "false",
      "location": "bodykey"
    },
    "has_issues": {
      "type": "boolean",
      "required": false,
      "description": "True to enable issues for this repository, false to disable them. Default is true.",
      "default": "true",
      "location": "bodykey"
    },
    "has_projects": {
      "type": "boolean",
      "required": false,
      "description": "True to enable projects for this repository, false to disable them. Default is true.",
      "default": "true",
      "location": "bodykey"
    },
    "has_wiki": {
      "type": "boolean",
      "required": false,
      "description": "True to enable the wiki for this repository, false to disable it. Default is true.",
      "default": "true",
      "location": "bodykey"
    },
    "team_id": {
      "type": "number",
      "required": false,
      "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
      "location": "bodykey"
    },
    "auto_init": {
      "type": "boolean",
      "required": false,
      "description": "True to create an initial commit with empty README. Default is false",
      "default": "false",
      "location": "bodykey"
    },
    "gitignore_template": {
      "type": "string",
      "required": false,
      "description": "Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.",
      "location": "bodykey"
    },
    "license_template": {
      "type": "string",
      "required": false,
      "description": "Desired LICENSE template to apply. Use the name of the template without the extension. For example, \"mit\" or \"mozilla\".",
      "location": "bodykey"
    },
    "allow_squash_merge": {
      "type": "boolean",
      "required": false,
      "description": "Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true. (In preview period. See README.)",
      "default": "true",
      "location": "bodykey"
    },
    "allow_merge_commit": {
      "type": "boolean",
      "required": false,
      "description": "Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true. (In preview period. See README.)",
      "default": "true",
      "location": "bodykey"
    },
    "allow_rebase_merge": {
      "type": "boolean",
      "required": false,
      "description": "Either true to allow rebase-merging pull requests, or false to prevent rebase-merging. Default: true. (In preview period. See README.)",
      "default": "true",
      "location": "bodykey"
    }
  },
  "GET /repositories/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/topics": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PUT /repos/:owner/:repo/topics": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "names": {
      "type": "string[]",
      "required": true,
      "description": "An array of topics to add to the repository. Pass one or more topics to replace the set of existing topics. Send an empty array ([]) to clear all topics from the repository.",
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/contributors": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "anon": {
      "type": "boolean",
      "required": false,
      "description": "Set to 1 or true to include anonymous contributors in results.",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/languages": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/teams": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/tags": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/branches": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "protected": {
      "type": "boolean",
      "required": false,
      "description": "Set to true to only return protected branches",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/branches/:branch": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/branches/:branch/protection": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PUT /repos/:owner/:repo/branches/:branch/protection": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "required_status_checks": {
      "type": "json",
      "required": true,
      "allow-null": true,
      "description": "JSON object that contains the following keys: `include_admins` - Enforce required status checks for repository administrators, `strict` - Require branches to be up to date before merging, `contexts` - The list of status checks to require in order to merge into this branch. This object can have the value of `null` for disabled.",
      "location": "bodykey"
    },
    "required_pull_request_reviews": {
      "type": "json",
      "required": true,
      "allow-null": true,
      "description": "JSON object that contains the following keys: `include_admins` - Enforce required status checks for repository administrators.",
      "location": "bodykey"
    },
    "dismissal_restrictions": {
      "type": "json",
      "required": false,
      "allow-null": true,
      "description": "JSON object that contains the following keys: `users` - The list of user logins with dismissal access, `teams` - The list of team slugs with dismissal access. This object can have the value of `null` for disabled.",
      "location": "bodykey"
    },
    "restrictions": {
      "type": "json",
      "required": true,
      "allow-null": true,
      "description": "JSON object that contains the following keys: `users` - The list of user logins with push access, `teams` - The list of team slugs with push access. This object can have the value of `null` for disabled.",
      "location": "bodykey"
    },
    "enforce_admins": {
      "type": "boolean",
      "required": true,
      "allow-null": false,
      "description": "Enforces required status checks for repository administrators.",
      "location": "bodykey"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "bodykey"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/branches/:branch/protection": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/branches/:branch/protection/required_status_checks": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PATCH /repos/:owner/:repo/branches/:branch/protection/required_status_checks": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "strict": {
      "type": "boolean",
      "required": false,
      "description": "Require branches to be up to date before merging.",
      "location": "bodykey"
    },
    "contexts": {
      "type": "string[]",
      "required": false,
      "description": "The list of status checks to require in order to merge into this branch.",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/branches/:branch/protection/required_status_checks": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PUT /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "contexts": {
      "type": "string[]",
      "required": true,
      "description": "An array of protected branch required status checks contexts (e.g. continuous-integration/jenkins).",
      "location": "body"
    }
  },
  "POST /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "contexts": {
      "type": "string[]",
      "required": true,
      "description": "An array of protected branch required status checks contexts (e.g. continuous-integration/jenkins).",
      "location": "body"
    }
  },
  "DELETE /repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "contexts": {
      "type": "string[]",
      "required": true,
      "description": "An array of protected branch required status checks contexts (e.g. continuous-integration/jenkins).",
      "location": "body"
    }
  },
  "GET /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PATCH /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "dismissal_restrictions": {
      "type": "json",
      "required": false,
      "allow-null": true,
      "description": "JSON object that contains the following keys: `users` - The list of user logins with dismissal access, `teams` - The list of team slugs with dismissal access. This object can have the value of `null` for disabled.",
      "location": "bodykey"
    },
    "dismiss_stale_reviews": {
      "type": "boolean",
      "required": false,
      "description": "Dismiss approved reviews automatically when a new commit is pushed.",
      "location": "bodykey"
    },
    "require_code_owner_reviews": {
      "type": "boolean",
      "required": false,
      "description": "Blocks merge until code owners have reviewed.",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/branches/:branch/protection/enforce_admins": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/branches/:branch/protection/enforce_admins": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "bodykey"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/branches/:branch/protection/enforce_admins": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/branches/:branch/protection/restrictions": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/teams": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/teams": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "teams": {
      "type": "string[]",
      "required": true,
      "description": "An array of team slugs (e.g. justice-league).",
      "location": "body"
    }
  },
  "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/teams": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "teams": {
      "type": "string[]",
      "required": true,
      "description": "An array of team slugs (e.g. justice-league).",
      "location": "body"
    }
  },
  "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/teams": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "teams": {
      "type": "string[]",
      "required": true,
      "description": "An array of team slugs (e.g. justice-league).",
      "location": "body"
    }
  },
  "GET /repos/:owner/:repo/branches/:branch/protection/restrictions/users": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PUT /repos/:owner/:repo/branches/:branch/protection/restrictions/users": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "users": {
      "type": "string[]",
      "required": true,
      "description": "An array of team slugs (e.g. justice-league).",
      "location": "body"
    }
  },
  "POST /repos/:owner/:repo/branches/:branch/protection/restrictions/users": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "users": {
      "type": "string[]",
      "required": true,
      "description": "An array of team slugs (e.g. justice-league).",
      "location": "body"
    }
  },
  "DELETE /repos/:owner/:repo/branches/:branch/protection/restrictions/users": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "branch": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "users": {
      "type": "string[]",
      "required": true,
      "description": "An array of team slugs (e.g. justice-league).",
      "location": "body"
    }
  },
  "GET /repos/:owner/:repo/collaborators": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "affiliation": {
      "type": "string",
      "required": false,
      "description": "Filter collaborators returned by their affiliation.",
      "enum": [
        "outside",
        "all",
        "direct"
      ],
      "default": "all",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/collaborators/:username": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/collaborators/:username/permission": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /repos/:owner/:repo/collaborators/:username": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "permission": {
      "type": "string",
      "required": false,
      "description": "`pull` - can pull, but not push to or administer this repository, `push` - can pull and push, but not administer this repository, `admin` - can pull, push and administer this repository.",
      "enum": [
        "pull",
        "push",
        "admin"
      ],
      "default": "push",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/collaborators/:username": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/comments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/commits/:ref/comments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/commits/:sha/comments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "body": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "path": {
      "type": "string",
      "required": false,
      "description": "Relative path of the file to comment on.",
      "location": "bodykey"
    },
    "position": {
      "type": "number",
      "required": false,
      "description": "Line index in the diff to comment on.",
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/comments/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PATCH /repos/:owner/:repo/comments/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "body": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/comments/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:name/community/profile": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/commits": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": false,
      "description": "Sha or branch to start listing commits from.",
      "location": "query"
    },
    "path": {
      "type": "string",
      "required": false,
      "description": "Only commits containing this file path will be returned.",
      "location": "query"
    },
    "author": {
      "type": "string",
      "required": false,
      "description": "GitHub login or email address by which to filter by commit author.",
      "location": "query"
    },
    "since": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "until": {
      "type": "date",
      "required": false,
      "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/commits/:sha": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/commits/:ref": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": true,
      "allow-empty": true,
      "description": "String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.",
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/compare/:base...:head": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "base": {
      "type": "string",
      "required": true,
      "description": "The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.",
      "location": "path"
    },
    "head": {
      "type": "string",
      "required": true,
      "description": "The branch (or git ref) where your changes are implemented.",
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/readme": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": false,
      "description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually master)",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/contents/:path": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "path": {
      "type": "string",
      "required": true,
      "allow-empty": true,
      "description": "The content path.",
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": false,
      "description": "The String name of the Commit/Branch/Tag. Defaults to master.",
      "location": "query"
    }
  },
  "PUT /repos/:owner/:repo/contents/:path": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "path": {
      "type": "string",
      "required": true,
      "description": "The content path.",
      "location": "path"
    },
    "message": {
      "type": "string",
      "required": true,
      "description": "The commit message.",
      "location": "bodykey"
    },
    "content": {
      "type": "string",
      "required": true,
      "description": "The updated file content, Base64 encoded.",
      "location": "bodykey"
    },
    "sha": {
      "type": "string",
      "required": true,
      "description": "The blob SHA of the file being replaced.",
      "location": "bodykey"
    },
    "branch": {
      "type": "string",
      "required": false,
      "description": "The branch name. If not provided, uses the repository’s default branch (usually master).",
      "location": "bodykey"
    },
    "committer": {
      "type": "json",
      "required": false,
      "location": "bodykey"
    },
    "author": {
      "type": "json",
      "required": false,
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/contents/:path": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "path": {
      "type": "string",
      "required": true,
      "description": "The content path.",
      "location": "path"
    },
    "message": {
      "type": "string",
      "required": true,
      "description": "The commit message.",
      "location": "bodykey"
    },
    "sha": {
      "type": "string",
      "required": true,
      "description": "The blob SHA of the file being removed.",
      "location": "bodykey"
    },
    "branch": {
      "type": "string",
      "required": false,
      "description": "The branch name. If not provided, uses the repository’s default branch (usually master).",
      "location": "bodykey"
    },
    "committer": {
      "type": "json",
      "required": false,
      "location": "bodykey"
    },
    "author": {
      "type": "json",
      "required": false,
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/:archive_format/:ref": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "archive_format": {
      "type": "string",
      "required": true,
      "description": "Either tarball or zipball, Deafult: tarball.",
      "enum": [
        "tarball",
        "zipball"
      ],
      "default": "tarball",
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": false,
      "description": "A valid Git reference. Default: the repository’s default branch (usually master).",
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/keys": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/keys/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/keys": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "title": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "key": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "read_only": {
      "type": "boolean",
      "required": false,
      "description": "If true, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/keys/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/deployments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": false,
      "description": "The short or long sha that was recorded at creation time. Default: none.",
      "default": "none",
      "location": "query"
    },
    "ref": {
      "type": "string",
      "required": false,
      "description": "The name of the ref. This can be a branch, tag, or sha. Default: none.",
      "default": "none",
      "location": "query"
    },
    "task": {
      "type": "string",
      "required": false,
      "description": "The name of the task for the deployment. e.g. deploy or deploy:migrations. Default: none.",
      "default": "none",
      "location": "query"
    },
    "environment": {
      "type": "string",
      "required": false,
      "description": "The name of the environment that was deployed to. e.g. staging or production. Default: none.",
      "default": "none",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/deployments/:deployment_id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "deployment_id": {
      "type": "string",
      "required": true,
      "description": "The deployment id.",
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/deployments": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": true,
      "description": "The ref to deploy. This can be a branch, tag, or sha.",
      "location": "bodykey"
    },
    "task": {
      "type": "string",
      "required": false,
      "description": "The named task to execute. e.g. deploy or deploy:migrations. Default: deploy",
      "default": "deploy",
      "location": "bodykey"
    },
    "auto_merge": {
      "type": "boolean",
      "required": false,
      "description": "Optional parameter to merge the default branch into the requested ref if it is behind the default branch. Default: true",
      "default": "true",
      "location": "bodykey"
    },
    "required_contexts": {
      "type": "string[]",
      "required": false,
      "description": "Optional array of status contexts verified against commit status checks. If this parameter is omitted from the parameters then all unique contexts will be verified before a deployment is created. To bypass checking entirely pass an empty array. Defaults to all unique contexts.",
      "location": "bodykey"
    },
    "payload": {
      "type": "string",
      "required": false,
      "description": "Optional JSON payload with extra information about the deployment. Default: \"\"",
      "default": "\"\"",
      "location": "bodykey"
    },
    "environment": {
      "type": "string",
      "required": false,
      "description": "The name of the environment that was deployed to. e.g. staging or production. Default: none.",
      "default": "none",
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "description": "Optional short description. Default: \"\"",
      "default": "\"\"",
      "location": "bodykey"
    },
    "transient_environment": {
      "type": "boolean",
      "required": false,
      "description": "Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: false. (In preview period. See README.)",
      "default": false,
      "location": "bodykey"
    },
    "production_environment": {
      "type": "boolean",
      "required": false,
      "description": "Specifies if the given environment is a one that end-users directly interact with. Default: true when environment is `production` and false otherwise. (In preview period. See README.)",
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/deployments/:id/statuses": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/deployments/:id/statuses/:status_id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "description": "The Deployment ID to list the statuses from.",
      "location": "path"
    },
    "status_id": {
      "type": "string",
      "required": true,
      "description": "The Deployment Status ID.",
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/deployments/:id/statuses": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "state": {
      "type": "string",
      "required": false,
      "description": "The state of the status. Can be one of pending, success, error, or failure.",
      "location": "bodykey"
    },
    "target_url": {
      "type": "string",
      "required": false,
      "description": "The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. Default: \"\"",
      "default": "\"\"",
      "location": "bodykey"
    },
    "log_url": {
      "type": "string",
      "required": false,
      "description": "Functionally equivalent to target_url. Default: \"\". (In preview period. See README.)",
      "default": "\"\"",
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "description": "A short description of the status. Default: \"\"",
      "default": "\"\"",
      "location": "bodykey"
    },
    "environment_url": {
      "type": "string",
      "required": false,
      "description": "URL for accessing the deployment environment. Default: \"\". (In preview period. See README.)",
      "default": "\"\"",
      "location": "bodykey"
    },
    "auto_inactive": {
      "type": "boolean",
      "required": false,
      "description": "When true the new `inactive` status is added to all other non-transient, non-production environment deployments with the same repository and environment name as the created status's deployment. Default: true. (In preview period. See README.)",
      "default": true,
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/downloads": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/downloads/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /repos/:owner/:repo/downloads/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/forks": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "Possible values: `newest`, `oldest`, `stargazers`, default: `newest`.",
      "enum": [
        "newest",
        "oldest",
        "stargazers"
      ],
      "default": "newest",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/invitations": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /repos/:owner/:repo/invitations/:invitation_id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "invitation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PATCH /repos/:owner/:repo/invitations/:invitation_id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "invitation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "permissions": {
      "type": "string",
      "required": false,
      "description": "The permissions that the associated user will have on the repository.",
      "enum": [
        "read",
        "write",
        "admin"
      ],
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/pages": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /repos/:owner/:repo/pages/builds": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/pages/builds": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/pages/builds/latest": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/pages/builds/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/releases": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/releases/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/releases/latest": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/releases/tags/:tag": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "tag": {
      "type": "string",
      "required": true,
      "description": "String of the tag",
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/releases": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "tag_name": {
      "type": "string",
      "required": true,
      "description": "String of the tag",
      "location": "bodykey"
    },
    "target_commitish": {
      "type": "string",
      "required": false,
      "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).",
      "location": "bodykey"
    },
    "name": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "body": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "draft": {
      "type": "boolean",
      "description": "true to create a draft (unpublished) release, false to create a published one. Default: false",
      "default": "false",
      "location": "bodykey"
    },
    "prerelease": {
      "type": "boolean",
      "description": "true to identify the release as a prerelease. false to identify the release as a full release. Default: false",
      "default": "false",
      "location": "bodykey"
    }
  },
  "PATCH /repos/:owner/:repo/releases/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "tag_name": {
      "type": "string",
      "required": true,
      "description": "String of the tag",
      "location": "bodykey"
    },
    "target_commitish": {
      "type": "string",
      "required": false,
      "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).",
      "location": "bodykey"
    },
    "name": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "body": {
      "type": "string",
      "required": false,
      "location": "bodykey"
    },
    "draft": {
      "type": "boolean",
      "required": false,
      "description": "true to create a draft (unpublished) release, false to create a published one. Default: false",
      "default": "false",
      "location": "bodykey"
    },
    "prerelease": {
      "type": "boolean",
      "required": false,
      "description": "true to identify the release as a prerelease. false to identify the release as a full release. Default: false",
      "default": "false",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/releases/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/releases/:id/assets": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST :url": {
    "url": {
      "type": "string",
      "required": true,
      "description": "This endpoint makes use of a Hypermedia relation (https://developer.github.com/v3/#hypermedia) to determine which URL to access. This endpoint is provided by a URI template in the release's API response (https://developer.github.com/v3/repos/releases/#get-a-single-release). You need to use an HTTP client which supports SNI (https://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.",
      "location": "path"
    },
    "file": {
      "type": "object",
      "required": true,
      "description": "A file read stream, a String or a Buffer.",
      "location": "body"
    },
    "contentType": {
      "type": "string",
      "required": true,
      "description": "The content type of the asset. This should be set in the Header. Example: 'application/zip'. For a list of acceptable types, refer this list of media types (https://www.iana.org/assignments/media-types/media-types.xhtml)",
      "location": "header"
    },
    "contentLength": {
      "type": "number",
      "required": true,
      "description": "File size in bytes.",
      "location": "header"
    },
    "name": {
      "type": "string",
      "required": true,
      "description": "The file name of the asset. This should be set in a URI query parameter.",
      "location": "query"
    },
    "label": {
      "type": "string",
      "required": false,
      "description": "An alternate short description of the asset. Used in place of the filename. This should be set in a URI query parameter.",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/releases/assets/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PATCH /repos/:owner/:repo/releases/assets/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "label": {
      "type": "string",
      "required": false,
      "description": "An alternate short description of the asset. Used in place of the filename.",
      "location": "bodykey"
    }
  },
  "DELETE /repos/:owner/:repo/releases/assets/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/stats/contributors": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/stats/commit_activity": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/stats/code_frequency": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/stats/participation": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /repos/:owner/:repo/stats/punch_card": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/statuses/:sha": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "sha": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "state": {
      "type": "string",
      "required": true,
      "description": "State of the status - can be one of pending, success, error, or failure.",
      "enum": [
        "pending",
        "success",
        "error",
        "failure"
      ],
      "location": "bodykey"
    },
    "target_url": {
      "type": "string",
      "required": false,
      "description": "Target url to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the ‘source’ of the Status.",
      "location": "bodykey"
    },
    "description": {
      "type": "string",
      "required": false,
      "description": "Short description of the status.",
      "location": "bodykey"
    },
    "context": {
      "type": "string",
      "required": false,
      "description": "A string label to differentiate this status from the status of other systems.",
      "location": "bodykey"
    }
  },
  "GET /repos/:owner/:repo/commits/:ref/statuses": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": true,
      "description": "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.",
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/commits/:ref/status": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ref": {
      "type": "string",
      "required": true,
      "description": "Ref to fetch the status for. It can be a SHA, a branch name, or a tag name.",
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/traffic/popular/referrers": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/traffic/popular/paths": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/traffic/views": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/traffic/clones": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/hooks": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /repos/:owner/:repo/hooks/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/hooks": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "config": {
      "type": "json",
      "required": true,
      "description": "A Hash containing key/value pairs to provide settings for this hook. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically.",
      "location": "bodykey"
    },
    "events": {
      "type": "string[]",
      "required": false,
      "description": "Determines what events the hook is triggered for. Default: `['push']`.",
      "default": "[\"push\"]",
      "location": "bodykey"
    },
    "active": {
      "type": "boolean",
      "required": false,
      "description": "Determines whether the hook is actually triggered on pushes.",
      "location": "bodykey"
    }
  },
  "PATCH /repos/:owner/:repo/hooks/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "config": {
      "type": "json",
      "required": true,
      "description": "A Hash containing key/value pairs to provide settings for this hook. Modifying this will replace the entire config object. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically.",
      "location": "bodykey"
    },
    "events": {
      "type": "string[]",
      "required": false,
      "description": "Determines what events the hook is triggered for. This replaces the entire array of events. Default: `['push']`.",
      "default": "[\"push\"]",
      "location": "bodykey"
    },
    "add_events": {
      "type": "string[]",
      "required": false,
      "description": "Determines a list of events to be added to the list of events that the Hook triggers for.",
      "location": "bodykey"
    },
    "remove_events": {
      "type": "string[]",
      "required": false,
      "description": "Determines a list of events to be removed from the list of events that the Hook triggers for.",
      "location": "bodykey"
    },
    "active": {
      "type": "boolean",
      "required": false,
      "description": "Determines whether the hook is actually triggered on pushes.",
      "location": "bodykey"
    }
  },
  "POST /repos/:owner/:repo/hooks/:id/tests": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /repos/:owner/:repo/hooks/:id/pings": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /repos/:owner/:repo/hooks/:id": {
    "owner": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repo": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /search/repositories": {
    "q": {
      "type": "string",
      "required": true,
      "description": "Search Term",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "stars, forks, or updated",
      "enum": [
        "stars",
        "forks",
        "updated"
      ],
      "location": "query"
    },
    "order": {
      "type": "string",
      "required": false,
      "description": "asc or desc",
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /search/code": {
    "q": {
      "type": "string",
      "required": true,
      "description": "Search Term",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "The sort field. Can only be indexed, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match.",
      "enum": [
        "indexed"
      ],
      "location": "query"
    },
    "order": {
      "type": "string",
      "required": false,
      "description": "asc or desc",
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /search/commits": {
    "q": {
      "type": "string",
      "required": true,
      "description": "Search Term",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "The sort field. Can be author-date or committer-date. Default: best match.",
      "enum": [
        "author-date",
        "committer-date"
      ],
      "location": "query"
    },
    "order": {
      "type": "string",
      "required": false,
      "description": "asc or desc",
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /search/issues": {
    "q": {
      "type": "string",
      "required": true,
      "description": "Search Term",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "The sort field. Can be comments, created, or updated. Default: results are sorted by best match.",
      "enum": [
        "comments",
        "created",
        "updated"
      ],
      "location": "query"
    },
    "order": {
      "type": "string",
      "required": false,
      "description": "asc or desc",
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /search/users": {
    "q": {
      "type": "string",
      "required": true,
      "description": "Search Term",
      "location": "query"
    },
    "sort": {
      "type": "string",
      "required": false,
      "description": "The sort field. Can be followers, repositories, or joined. Default: results are sorted by best match.",
      "enum": [
        "followers",
        "repositories",
        "joined"
      ],
      "location": "query"
    },
    "order": {
      "type": "string",
      "required": false,
      "description": "asc or desc",
      "enum": [
        "asc",
        "desc"
      ],
      "default": "desc",
      "location": "query"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /legacy/user/email/:email": {
    "email": {
      "type": "string",
      "required": true,
      "description": "The email address",
      "location": "path"
    }
  },
  "GET /user": {},
  "PATCH /user": {
    "name": {
      "type": "string",
      "required": false,
      "description": "The new name of the user",
      "location": "bodykey"
    },
    "email": {
      "type": "string",
      "required": false,
      "description": "Publicly visible email address.",
      "location": "bodykey"
    },
    "blog": {
      "type": "string",
      "required": false,
      "description": "The new blog URL of the user.",
      "location": "bodykey"
    },
    "company": {
      "type": "string",
      "required": false,
      "description": "The new company of the user.",
      "location": "bodykey"
    },
    "location": {
      "type": "string",
      "required": false,
      "description": "The new location of the user.",
      "location": "bodykey"
    },
    "hireable": {
      "type": "boolean",
      "required": false,
      "description": "The new hiring availability of the user.",
      "location": "bodykey"
    },
    "bio": {
      "type": "string",
      "required": false,
      "description": "The new short biography of the user.",
      "location": "bodykey"
    }
  },
  "PUT /users/:username/site_admin": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /users/:username/site_admin": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /users/:username/suspended": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /users/:username/suspended": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /users/:username": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /user/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /users": {
    "since": {
      "type": "number",
      "required": false,
      "description": "The integer ID of the last User that you’ve seen.",
      "location": "query"
    }
  },
  "GET /user/orgs": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/memberships/orgs": {
    "state": {
      "type": "string",
      "required": false,
      "description": "Indicates the state of the memberships to return. Can be either active or pending. If not specified, both active and pending memberships are returned.",
      "enum": [
        "active",
        "pending"
      ],
      "location": "query"
    }
  },
  "GET /user/memberships/orgs/:org": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PATCH /user/memberships/orgs/:org": {
    "org": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "state": {
      "type": "string",
      "required": true,
      "description": "The state that the membership should be in. Only \"active\" will be accepted.",
      "enum": [
        "active"
      ],
      "location": "bodykey"
    }
  },
  "GET /user/teams": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/emails": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/public_emails": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "POST /user/emails": {
    "emails": {
      "type": "string[]",
      "required": true,
      "description": "You can post a single email address or an array of addresses.",
      "location": "body"
    }
  },
  "DELETE /user/emails": {
    "emails": {
      "type": "string[]",
      "required": true,
      "description": "You can post a single email address or an array of addresses.",
      "location": "body"
    }
  },
  "PATCH /user/email/visibility": {},
  "GET /users/:username/followers": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/followers": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /users/:username/following": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/following": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/following/:username": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /users/:username/following/:target_user": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "target_user": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /user/following/:username": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /user/following/:username": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /users/:username/keys": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/keys": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/keys/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /user/keys": {
    "title": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    },
    "key": {
      "type": "string",
      "required": true,
      "location": "bodykey"
    }
  },
  "DELETE /user/keys/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /users/:username/gpg_keys": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/gpg_keys": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/gpg_keys/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /user/gpg_keys": {
    "armored_public_key": {
      "type": "string",
      "required": true,
      "description": "GPG key contents",
      "location": "bodykey"
    }
  },
  "DELETE /user/gpg_keys/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /user/blocks": {},
  "GET /user/blocks/:username": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PUT /user/blocks/:username": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /user/blocks/:username": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /user/repository_invitations": {},
  "PATCH /user/repository_invitations/:invitation_id": {
    "invitation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /user/repository_invitations/:invitation_id": {
    "invitation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /user/installations": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/installations/:installation_id/repositories": {
    "installation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "PUT /user/installations/:installation_id/repositories/:repository_id": {
    "installation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repository_id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "DELETE /user/installations/:installation_id/repositories/:repository_id": {
    "installation_id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "repository_id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /user/marketplace_purchases": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /user/marketplace_purchases/stubbed": {
    "page": {
      "type": "number",
      "required": false,
      "description": "Page number of the results to fetch.",
      "location": "query"
    },
    "per_page": {
      "type": "number",
      "required": false,
      "description": "A custom page size up to 100. Default is 30.",
      "default": "30",
      "location": "query"
    }
  },
  "GET /enterprise/stats/:type": {
    "type": {
      "type": "string",
      "required": true,
      "description": "Possible values: issues, hooks, milestones, orgs, comments, pages, users, gists, pulls, repos, all.",
      "enum": [
        "issues",
        "hooks",
        "milestones",
        "orgs",
        "comments",
        "pages",
        "users",
        "gists",
        "pulls",
        "repos",
        "all"
      ],
      "location": "path"
    }
  },
  "PATCH /admin/ldap/users/:username/mapping": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "ldap_dn": {
      "type": "string",
      "required": true,
      "description": "LDAP DN for user",
      "location": "bodykey"
    }
  },
  "POST /admin/ldap/users/:username/sync": {
    "username": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "PATCH /admin/ldap/teams/:team_id/mapping": {
    "team_id": {
      "type": "number",
      "required": true,
      "location": "path"
    },
    "ldap_dn": {
      "type": "string",
      "required": true,
      "description": "LDAP DN for user",
      "location": "bodykey"
    }
  },
  "POST /admin/ldap/teams/:team_id/sync": {
    "team_id": {
      "type": "number",
      "required": true,
      "location": "path"
    }
  },
  "GET /enterprise/settings/license": {},
  "GET /admin/pre-receive-environments/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /admin/pre_receive_environments": {},
  "POST /admin/pre_receive_environments": {
    "name": {
      "type": "string",
      "required": true,
      "description": "The new pre-receive environment's name.",
      "location": "bodykey"
    },
    "image_url": {
      "type": "string",
      "required": true,
      "description": "URL from which to download a tarball of this environment.",
      "location": "bodykey"
    }
  },
  "PATCH /admin/pre_receive_environments/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "name": {
      "type": "string",
      "required": true,
      "description": "This pre-receive environment's new name.",
      "location": "bodykey"
    },
    "image_url": {
      "type": "string",
      "required": true,
      "description": "URL from which to download a tarball of this environment.",
      "location": "bodykey"
    }
  },
  "DELETE /admin/pre_receive_environments/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /admin/pre-receive-environments/:id/downloads/latest": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /admin/pre_receive_environments/:id/downloads": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /admin/pre-receive-hooks/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "GET /admin/pre-receive-hooks": {},
  "POST /admin/pre-receive-hooks": {
    "name": {
      "type": "string",
      "required": true,
      "description": "The name of the hook.",
      "location": "bodykey"
    },
    "script": {
      "type": "string",
      "required": true,
      "description": "The script that the hook runs.",
      "location": "bodykey"
    },
    "script_repository": {
      "type": "json",
      "required": true,
      "description": "The GitHub repository where the script is kept.",
      "location": "bodykey"
    },
    "environment": {
      "type": "json",
      "required": true,
      "description": "The pre-receive environment where the script is executed.",
      "location": "bodykey"
    },
    "enforcement": {
      "type": "string",
      "required": false,
      "description": "The state of enforcement for this hook. default: disabled",
      "default": "disabled",
      "location": "bodykey"
    },
    "allow_downstream_configuration": {
      "type": "boolean",
      "required": false,
      "description": "Whether enforcement can be overridden at the org or repo level. default: false",
      "default": "false",
      "location": "bodykey"
    }
  },
  "PATCH /admin/pre_receive_hooks/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    },
    "hook": {
      "type": "json",
      "required": true,
      "description": "JSON object that contains pre-receive hook info.",
      "location": "body"
    }
  },
  "DELETE /admin/pre_receive_hooks/:id": {
    "id": {
      "type": "string",
      "required": true,
      "location": "path"
    }
  },
  "POST /staff/indexing_jobs": {
    "target": {
      "type": "string",
      "required": true,
      "description": "A string representing the item to index.",
      "location": "bodykey"
    }
  },
  "POST /admin/organizations": {
    "login": {
      "type": "string",
      "required": true,
      "description": "The organization's username.",
      "location": "bodykey"
    },
    "admin": {
      "type": "string",
      "required": true,
      "description": "The login of the user who will manage this organization.",
      "location": "bodykey"
    },
    "profile_name": {
      "type": "string",
      "required": false,
      "description": "The organization's display name.",
      "location": "bodykey"
    }
  }
}
